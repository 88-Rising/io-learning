package NetworkProgramming;

public class Concept {
    /*
    * 主要关注网络和通信协议
    *
    * 网络：把不同区域的电脑连接在一起，组成局域网，城域网或者广域网
    *      把分布在不同地理区域的计算机与专门的外部设备用通信线路互联成一个大规模
    *      功能强大的网络系统，从而使众多计算机可以方便的互相传递信息，共享硬件，软件，数据信息等资源
    *         1.资源共享 2.信息传输与集中处理 3.负载均衡与分布处理
    *                 高并发高性能高可用
    *
    * 通信协议：计算机网络中实现通信比有一些约定即通信协议，对速率，传输代码，代码结构，传输控制步骤，出错控制等指定标准
    *
    * 通信接口：为了使两个结点之间能进行对话，必须在它们之间建立通信工具，是彼此之间能进行信息交换，接口包含两部分：
    *          1.硬件装置：实现结点之间的信息传送
    *          2.软件装置：规定双方进行通信的约定协议
    *
    * OSI参考模式：开放系统互连参考模型（Open System Interconnect）
    *
    * 真实使用的标准使 TCP/IP协议（传输控制/网际协议）
    *   重点关注TCP，UDP即传输层
    *
    *  数据封装：是指把协议数据单元封装在一组协议头和协议尾的过程，在七层参考模型中，每层主要负责与其他机器上的对等层进行通信
    *           该过程实在协议数据单元中PDU实现的，其中每层的PDU一般有本层的协议头协议尾和数据封装构成
    *        应用层：准备数据
    *        传输层：接收应用层数据添加上TCP的控制信息称为TCP的头部，这个数据段元的段加入控制信息的过程称为封装，由此将段
    *               交给网络层
    *        网络层：接收到段，在添加上IP的头，这个数据单元称为包，然后把包交给数据链路层
    *        数据链路层：把包再添加上MAC头部和尾部，这个数据单元称为帧，然后把帧交给物理层
    *        物理层：把接收到的数据转化为比特流，然后再网线中传送
    *
    *
    * 数据的拆封：是指把接收到的数据进行拆包，每一层只把对该层有意义的数据拿走，或者说每一层只能处理发送方同层的数据，然后把其余部分
    *            递交给上一层，这就是对等层通信的概念
    *
    *     物理层：接收到比特流，经过处理后把数据交给数据链路层
    *     数据链路层：把接收到的数据转化为数据帧，再除去MAC头部和尾部，这个出去控制信息的过程称为解封，然后把包交给网络层
    *     网络层：接收到包，再出去IP头部，然后把段交给传输层
    *     传输层；接收到端再去TCP头部，然后把数据交给应用层
    *     应用层：数据处理
    *
    * 接收方数据处理的方式使从底层到高层，逐层进行数据解封装
    *
    * */
}
